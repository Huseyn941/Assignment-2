import Task_6
from random import choice, randint
import unittest
from unittest.mock import patch
from io import StringIO

class TestMainFunction(unittest.TestCase):

  def test_input(self):
        input_value = [(-2.9935005564074935, 0.32490842196370817, False), (-0.0011240290755698545, -1.6166655055906922, False), (-2.7919505196832533, 1.254747671179099, False), (-0.2319433546038039, -0.21755768941209386, False), (-0.19706662184292156, -2.028917340526473, False), (-1.1221609901951812, -2.773273183885751, False), (-1.102989815663734, -2.3353749887185256, False), (-1.9621673874677077, -1.0782388263642002, False), (-2.785543796798658, 2.6175861608073383, False), (-2.552976685605275, 1.1735567449504671, False), (-0.8915442007727674, -2.8947938326912768, False), (-2.855006184624485, 0.23424957806036595, False), (-0.9256990876595284, 2.357131694632078, False), (-1.107525044387215, 2.2709633665187097, False), (-2.2886087661322567, 2.826972631225396, False), (-0.5246141255245784, -1.2545063436241277, False), (-1.5813258865062776, 0.757443445812152, False), (-2.443343597081855, -2.8813257541748136, False), (-2.896518276189722, -2.2408438609077814, False), (-0.8619881825379143, -1.6857245059111525, False), (-2.1155077936582614, -2.7463307279013986, False), (-0.15352503942084006, 1.140790664835725, False), (-1.2430253325024248, 0.24827150014843324, False), (-0.2490829225567861, -0.6952967208300143, False), (-0.26583754199904597, -0.8317119068700372, False), (1.3298129916714398, 1.3561110918312487, False), (2.2313736028529916, -2.226357050140023, False), (1.0208864610803823, 1.090246525130671, False), (0.5009892365918663, 0.8493197492655913, False), (2.4548896206138604, -2.1483937263306627, False), (2.478239092096936, -1.4097828280673834, False), (2.6492973610289927, 1.1854819392528446, False), (2.973922365359436, 1.8114311558804275, False), (2.3829365824780537, -0.2382054311831836, False), (2.5678742380749324, -2.833239793351117, False), (1.0448656530464755, 0.9785965164698212, False), (1.9682456744594496, -1.7307288553396143, False), (2.2792125870999507, 1.9288569821698358, False), (1.8254943877344663, -1.8284265403164077, False), (0.13760737911253684, -1.0472717661939874, False), (1.1797395157601391, 1.5415908470697985, False), (1.2200443641143992, -1.9786901353252535, False), (1.949308616849056, -0.5315444640507927, False), (2.99708097325842, -0.2154867581931632, False), (2.7547284667574674, 0.6983626967565746, False), (0.2531262910084021, 0.160166805579669, False), (0.12546574720353731, 2.342773065481171, False), (2.568595015060046, -0.6279355177730555, False), (0.6698694224591035, 1.5666505267916548, False), (2.659392659221426, 1.2468062659782362, False), (1.4105209811930777, 1.828575299069045, False), (1.0309803819683263, 0.4426640514546478, False), (-0.8290379971628634, 1.2728653928781846, False), (-0.6490719569203556, 1.8628101779687025, False), (1.7990619688971439, -0.20841364880673607, False), (-1.9764470394707656, -1.001993970045902, False), (-0.4038988799686578, 0.28008387508617183, False), (-1.4031394628045928, 0.718231374969271, False), (0.563177727634335, -1.2622918455948011, False), (0.3643801114514078, 1.8960703789059439, False), (-0.15742819078442905, 0.9152189777635744, False), (0.11547734834768253, -0.29706614176680324, False), (1.4425471522682805, 1.3251752222601785, False), (0.14787202746323613, -1.78863673183825, False), (0.1401523678866825, 1.0048010002193166, False), (0.7792896791666033, 1.9957512689827577, False), (-0.9887251522105802, -1.6095351199958312, False), (-1.9745674425709079, -1.31160529154434, False), (1.0861308208856668, -0.027928732109126386, False), (0.11449407174769055, 0.4023894726381889, False), (-0.07591089281057428, -0.15728836728020523, False), (0.8738198996995878, 0.3091499985132984, False), (1.7521824523675864, 0.20878718952528885, False), (0.9428020873278786, -1.8306424246274915, False), (-1.566522199746455, 0.2899330394598567, False), (1.1449387943831892, 1.19831991725581, False), (1.9905775387016837, 1.4831639769667253, True), (1.6195922445872688, 1.776533992519616, False), (1.6309069252860309, 1.2570314942159109, True), (1.139472529416845, 1.6309215829482808, False), (1.7241529036730716, 1.919658367516878, False), (1.4616449819602264, 1.7321684914916036, False), (1.4724454112946233, 1.6089635410574061, False), (1.5031210768667593, 1.2923136116155132, False), (1.360478525931796, 1.4342744193420978, False), (1.4059546452592517, 1.9554547181459627, False), (1.032331223173324, 1.7780317354489075, False), (1.601001953653336, 1.3445474686975891, True), (1.457415778330118, 1.2831804160523514, False), (1.8034574667997223, 1.7553338585711216, True), (1.4545699857245404, 1.920855750404571, False), (1.7906742115936956, 1.8525517982336308, False), (1.52808694770877, 1.6189871443621815, False), (1.1152424664158742, 1.5745338689439614, False), (1.070385422052996, 1.6201448382474068, False), (1.7427851574182522, 1.8203158762964446, False), (1.822632967423529, 1.5722374276398923, True), (1.21965589722183, 1.0183368674899689, False), (1.554091537092783, 1.2208719495184142, False), (1.0220639303127532, 1.216753950822469, False)]
        expected_output = ("The point is not in the shaded area", "The point is in the shaded area")
        
        for _ in range(randint(10,30)):
            test = choice(input_value)
            with patch('builtins.input', side_effect=test[:2]), \
                patch('sys.stdout', new_callable=StringIO) as mock_stdout:
                Task_6.main()
            self.assertEqual(mock_stdout.getvalue().strip(), expected_output[test[2]])

if __name__ == '__main__':
    unittest.main()
