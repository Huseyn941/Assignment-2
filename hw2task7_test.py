import Task_7
from random import choice, randint
import unittest
from unittest.mock import patch
from io import StringIO

class TestMainFunction(unittest.TestCase):

  def test_input(self):
        input_value = [(-1.619469386556224, 1.3710990979171145, False), (-2.900278562311251, -2.6964601076750774, False), (-0.39943086876759804, 0.749009764726611, False), (-2.4640837039612697, -1.0845411897828916, False), (-1.1843103213338564, -0.7645011761382685, False), (-1.7648819643027096, -0.36141469234619317, False), (-2.8186314838079647, -0.22724389404011536, False), (-2.9286585176871545, 1.2984583543773613, False), (-2.7887089020646387, 0.5885467716890984, False), (-2.705744357969782, 2.459209765751016, False), (-1.1907189529229636, 0.47631634481456775, False), (-2.8295870524069304, 2.0961296589831147, False), (-2.772973041138701, -0.5605183951277937, False), (-0.5399230313131294, 0.41679263851635895, False), (-1.840278676400101, 0.4184525338725802, False), (-1.526862472912361, 0.6828238341097688, False), (-0.390663073824121, -1.9193081501238456, False), (-2.5564722124792514, 0.16541767871182778, False), (-1.640174444002727, -1.0128968957234292, False), (-1.9480403107127138, -0.1537458124252895, False), (-2.7887374274228365, 0.5286753743802519, False), (-0.07468811791689589, 0.8761107609659602, False), (-2.513330742388706, 2.7558194618167997, False), (-2.2156475251651013, 2.284408119893188, False), (-0.6469581567715674, 2.577691012683869, False), (5.298841952244356, 5.3076074965021025, False), (2.722667628085965, 0.7980038177732779, True), (0.040555011368354155, 0.3716994105268254, False), (3.190240584025467, 2.654427774689988, True), (0.744419938163638, 1.5980082367573458, False), (1.4685772870156177, 1.2498177008014895, True), (0.02441583297735317, 0.06035764352840489, False), (0.6440604217211532, 0.14623559051674462, True), (0.4053522780533836, 0.559301972872082, False), (3.1303095622116914, 1.6915574020289434, True), (0.7860710346242605, 0.29438259085728313, True), (0.08349247631615597, 2.411884634517577, False), (3.356678806478444, 2.234653826665089, True), (3.3341419129480876, 0.12471562777222023, True), (1.2716230433346745, 1.3065764541050107, False), (3.433673901289568, 0.18985342250733228, True), (0.38409237283464304, 0.9316845969746365, False), (1.6258615255450057, 2.9690819425096926, False), (3.4101758451144772, 2.9938567566551533, True), (0.5992436324541033, 0.697034481701858, False), (2.329523947710039, 1.3730650594546185, True), (1.1674976538996518, 0.050691381528533586, True), (2.907961329955667, 1.5691605782462956, True), (1.2802138568513532, 2.080006300925554, False), (2.1451599119867826, 2.5404216190294817, False), (0.5717541353764313, -3.1502147288800724, False), (0.3275569045455322, -1.9821926289465508, False), (1.6659719695007786, -1.5726202433286873, False), (0.8662296238589655, -0.3871372163410811, False), (2.8983940056102826, -0.854986984230238, False), (0.09258439545329011, -2.955593255255869, False), (0.6983255693668426, -2.563151321035625, False), (0.22155521478135576, -2.0233240975959883, False), (0.2677777324140056, -2.0467793077820806, False), (3.2077490788399614, -1.515888963493692, False), (1.9796489432524296, -2.664921717390203, True), (1.7716236294050973, -2.68431398183547, True), (1.8189337357278257, -1.547542162930158, False), (0.08688217631434547, -1.1121220424546747, False), (0.31822895777876825, -2.6959363826671527, False), (0.024038316891003664, -2.200101894583474, False), (0.7398215098689751, -2.268945980182657, False), (0.7727315659841203, -2.1637226305467356, False), (2.119198808609756, -0.39302573677263686, False), (0.638203432220426, -1.4047732861960216, False), (1.7950945748681866, -2.516201549044559, True), (3.958855140549923, -0.2438748754172333, False), (3.881964338995426, -1.6665404362428051, False), (2.7268943527321823, -2.975906732847442, False), (2.295118290633137, -1.9833512072444792, False), (-1.0510138797402933, -4.878464102031313, False), (-0.7737458841837683, -5.107289072154959, False), (1.9806103683067358, 3.2586557095437385, False), (-0.7517329167729558, 1.5852139122210298, False), (-1.312391386775051, 2.3374312930274606, False), (1.848910797241956, 3.667461870343974, False), (2.8462999426249658, -3.7764822154928708, False), (5.907351558482944, -1.3130108686889574, False), (3.223638449507648, -2.967510726663263, False), (-2.592686207757556, 5.043278563647419, False), (1.83904004273096, 3.779521441370676, False), (5.005240449494472, 1.5909555912508946, False), (0.32643433735469873, 5.970702488185561, False), (-2.072409596792064, 2.4264673759654354, False), (-1.6560741353577857, 4.302664921238092, False), (2.4420284585982532, 1.6674183531558402, True), (-2.9676533948372548, -2.453434405710634, False), (-2.602219453645008, 4.149473334142375, False), (3.4840602419731326, 0.1310457753981069, True), (1.2120366199834773, -2.303743723691124, True), (5.639691482893545, 2.3721206404247823, False), (-1.2830062802873696, 3.5114019532972787, False), (0.6253767034444504, 2.5547858243618595, False), (-0.502934017784987, 4.941788903668305, False), (1.9743767160750059, -5.546263472937998, False)]
        expected_output = ("The point is not in the shaded area", "The point is in the shaded area")
        
        for _ in range(randint(10,30)):
            test = choice(input_value)
            with patch('builtins.input', side_effect=test[:2]), \
                patch('sys.stdout', new_callable=StringIO) as mock_stdout:
                Task_7.main()
            self.assertEqual(mock_stdout.getvalue().strip(), expected_output[test[2]])

if __name__ == '__main__':
    unittest.main()
