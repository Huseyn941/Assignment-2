import Task_9
from random import choice, randint
import unittest
from unittest.mock import patch
from io import StringIO

class TestMainFunction(unittest.TestCase):

  def test_input(self):
        input_value = [(-1.0389785451435785, 0.692032853750618, False), (-1.2223734633069312, 2.939532230424961, False), (1.537624265858705, 1.1967731876845469, False), (-1.538130141431334, 1.0326192369535279, False), (-1.0034241851839405, 2.637649907033481, False), (1.2148462086949823, 2.5776490722077607, False), (-0.8677180185131785, 0.15387906183275613, False), (-0.7357693245744823, 2.0419575040176805, False), (-1.4355208505976997, 3.8303568963081562, False), (0.8102327292117009, 1.4528459261380968, False), (-0.9484388444140657, 3.582582798794171, False), (1.0532536547709612, 2.4149819288358976, False), (-0.42333382091916594, 2.5065193057223865, False), (0.7593026919922004, 2.9048455076884308, False), (-0.7974413393950885, 1.3688025732825704, False), (0.3603888674199225, 1.8805625505181491, False), (1.0240381590443293, 3.525696803578518, False), (-1.5557092869948819, 2.1485190477713907, False), (1.9489976346856488, 2.6702706208837537, False), (-1.7305244242043836, 3.9226687763746813, False), (-1.80406078381825, 0.8581675809918172, False), (-1.7552265190320053, 3.6152611828654257, False), (1.8489238141216253, 0.8896368576278726, False), (-1.2320904400053037, 0.14522080721664254, False), (0.5566822256400572, 0.6849154419412633, True), (-3.1943377010735405, -4.348108937258917, True), (1.3056867258897396, -0.6594157180959701, False), (-1.033713859322491, -0.9984556529399712, False), (0.013876462651978283, -0.2188639529119507, False), (-0.00632247965867494, -0.4565144974803115, False), (-0.893884171274363, -0.4686766788202007, False), (1.9629492896917737, -0.7736521759902131, False), (-0.4585531155427325, -0.6014198766878811, False), (-0.43508003481738067, -0.8642834525943579, False), (-1.1732873596872682, -0.47332143894734846, False), (1.2233507207356382, -0.7238122922434868, False), (-0.10364272207892222, -0.17874783400599725, False), (1.870891783386452, -0.5517711647499963, False), (0.3475342072641059, -0.12662334851597756, True), (-1.4591453963291885, -0.7434045463095805, False), (1.1104873004277511, -0.7912756760640055, False), (0.29328990418515044, -0.8705862148672627, False), (-0.425396917834588, -0.158555888768243, True), (-1.7905614790430189, -0.37845093020008225, False), (1.194472426671065, -0.5214173340648351, False), (-0.7387178484554404, -0.042921839213487134, True), (-0.8889807295938592, -0.5449784554693048, False), (-0.35814551086079405, -0.18899329278591426, True), (0.46744152838607933, -0.028988844604923125, True), (0.5574398338569031, -0.19639251841513916, True), (1.9602458809052168, -3.6643659396458697, True), (-1.002464851328768, -4.1918566517529365, True), (2.785512090701509, -3.0197162425909383, True), (0.35720205115084536, -0.3729735074504692, False), (-1.4751916237649498, -0.9763306959416536, False), (2.973866875428662, -1.6328248311325222, False), (2.4623662199409537, -4.160080644279064, True), (-0.6774497833777948, -4.360984843087291, True), (1.2733250485412944, -2.8538933846083774, True), (-1.3795008280125372, -0.32813375636887177, False), (2.0674320047048074, -1.0572720322579614, False), (1.215327946276819, -4.520513191586425, True), (-0.8311142574462256, -3.7611711048506624, True), (0.5728450546350063, -0.468838465037579, True), (-1.3751626903321879, -2.625554804362367, True), (0.9310659701111055, -0.7249791984992608, False), (-1.9024554108706535, -1.3079175317755731, False), (-1.1939352737950413, -4.438467023639852, True), (-0.056473394755843564, -0.30382414963692383, False), (2.9319269562772075, -4.3421437989764105, True), (1.2451620261460565, -2.3711991365678076, True), (1.0519586697090153, -0.6781358429199322, False), (-0.10680061105041272, -3.4550441180953806, True), (-2.4530055691606356, -4.405131823479178, True), (2.816977645835655, -3.787127271429397, True), (-1.6063912031093364, -3.08240072286131, True), (-1.9406991480600446, 2.4505348390383226, False), (1.5006164310250893, -3.836380284791151, True), (-4.370126103059412, -2.254126733324031, False), (-2.278613341633843, -0.13940813628044868, False), (-3.8460523190643947, -1.7876089418582444, False), (-3.3850434427144993, -3.0837499717510273, False), (-0.659252344472856, -0.8613513618111055, True), (2.692081548603497, 4.2009099747219025, False), (0.6394649829291836, -0.943818225981027, True), (-0.6932449217708045, 1.6952661310913788, False), (1.139031926599352, 1.8818992561874683, False), (2.484731294053822, -1.4527029812840908, False), (1.8170677514778095, -4.871668760262494, True), (1.844779054391279, 3.0755295083027274, False), (0.923224526172902, -3.4447677730632877, True), (-4.386013117716011, -3.345982119914158, False), (-1.6607175258546092, -1.914004212528165, True), (3.3398143897015196, 0.3083454347271619, False), (-4.971245968314859, -0.22201744644401256, False), (-1.3609213546228318, 1.9039046992047286, False), (-4.7851857078123325, 0.8765294511380084, False), (4.980727948599938, 3.89283622855249, False), (1.9702835073819438, -0.588791340068628, False), (2.3769711823135307, 0.08941106070343707, False)]
        expected_output = ("The point is not in the shaded area", "The point is in the shaded area")
        
        for _ in range(randint(10,30)):
            test = choice(input_value)
            with patch('builtins.input', side_effect=test[:2]), \
                patch('sys.stdout', new_callable=StringIO) as mock_stdout:
                Task_9.main()
            self.assertEqual(mock_stdout.getvalue().strip(), expected_output[test[2]])

if __name__ == '__main__':
    unittest.main()
